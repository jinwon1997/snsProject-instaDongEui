<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.snsProject.model.DAO.PostDAO">
    <resultMap id="postViewResultMap" type="com.example.snsProject.model.DTO.PostViewDTO">
        <result property="id" column="id"/>
        <result property="memberId" column="member_id"/>
        <result property="content" column="content"/>
        <result property="date" column="date"/>
        <result property="userName" column="user_name"/>
        <result property="name" column="name"/>
        <result property="email" column="email"/>
        <result property="url" column="url"/>
    </resultMap>

    <select id="getPosts" resultMap="postViewResultMap">
        <![CDATA[
             select * from post_user_view where member_id in (${userIds}) order by date desc limit #{start}, #{cnt};
        ]]>
    </select>
    <select id="getExplorePosts" resultMap="postViewResultMap">
        <![CDATA[
             select * from post_user_view order by date desc limit #{start}, #{cnt};
        ]]>
    </select>
    <select id="getPostImages" resultType="com.example.snsProject.model.DTO.PostImageDTO">
        <![CDATA[
            select * from post_image where post_id = #{postId};
        ]]>
    </select>
    <select id="getPostLikes" resultType="com.example.snsProject.model.DTO.PostLikeDTO">
        <![CDATA[
            select * from post_like where post_id = #{postId};
        ]]>
    </select>
    <select id="getPostTags" resultType="com.example.snsProject.model.DTO.PostTagDTO">
        <![CDATA[
            select * from post_tag where post_id = #{postImageId};
        ]]>
    </select>

    <select id="likePost" resultType="int">
        <![CDATA[
            select count(*) from post_like where member_id = #{userId} and post_id = #{postId};
        ]]>
    </select>
    <insert id="registerLike">
        <![CDATA[
            insert into post_like values (null, #{userId}, #{postId});
        ]]>
    </insert>
    <delete id="cancelLike">
        <![CDATA[
            delete from post_like where member_id = #{userId} and post_id = #{postId};
        ]]>
    </delete>

    <select id="getImagesUrl" resultType="hashmap">
        <![CDATA[
          SELECT pi.post_id,
          MIN(pi.url) AS thumbnail_url,
          COUNT(pi.id) AS image_count
          FROM post_image pi
          GROUP BY pi.post_id
          ORDER BY RAND()
          LIMIT 100;
        ]]>
    </select>

    <select id="getPostContent" resultType="hashmap" parameterType="string">
        <![CDATA[
            SELECT
            p.id,
            m.user_name,
            p.content,
            p.DATE,
            pi.url
            FROM
            post p
            LEFT OUTER JOIN
            member m ON p.member_id = m.id
            LEFT OUTER JOIN
            post_image pi ON p.id = pi.post_id
            WHERE
            p.id = #{postId};
        ]]>
    </select>

    <insert id="registerPost">
        <![CDATA[
            insert into post values (null, #{userId}, #{postText}, now());
        ]]>
    </insert>

    <insert id="registerPostImage">
        <![CDATA[
            insert into post_image values (null, #{postId}, #{postImageUrl}, null);
        ]]>
    </insert>

    <select id="getRegisterPost" resultType="long" >
        <![CDATA[
            SELECT
            id
            FROM
            post p
            WHERE
            member_id = #{userId} order by date desc limit 1;
        ]]>
    </select>
    <update id="deletePost" statementType="CALLABLE">
        <![CDATA[
         { CALL DeletePostAndRelatedData(#{p_member_id, mode=IN, jdbcType=BIGINT}, #{p_post_id, mode=IN, jdbcType=BIGINT}) }
        ]]>
    </update>

    <select id="getPost" resultType="int">
        <![CDATA[
            select count(*) post where id = #{postId} and member_id = #{userId};
        ]]>
    </select>
</mapper>